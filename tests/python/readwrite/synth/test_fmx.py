from rv.api import m


def test_fmx(read_write_read_synth, dump_on_failure):
    mod: m.Fmx = read_write_read_synth("fmx").module

    assert mod.flags == 0x02000059
    assert mod.name == "FMX"

    assert mod.custom_waveform.values == EXPECTED_CUSTOM_WAVEFORM

    assert mod.volume == 24762
    assert mod.panning == 69
    assert mod.sample_rate == mod.SampleRate._11025hz
    assert mod.polyphony == 15
    assert mod.channels == mod.Channels.stereo
    assert mod.input_to_operator == 0
    assert mod.input_to_custom_waveform == mod.InputCustomWaveform.continuous
    assert mod.adsr_smooth_transitions == mod.AdsrSmoothTransitions.off
    assert mod.noise_filter == 9897
    assert mod.op1_volume == 20098
    assert mod.op2_volume == 20987
    assert mod.op3_volume == 21450
    assert mod.op4_volume == 17213
    assert mod.op5_volume == 31592
    assert mod.op1_attack == 5679
    assert mod.op2_attack == 5951
    assert mod.op3_attack == 7917
    assert mod.op4_attack == 1259
    assert mod.op5_attack == 4740
    assert mod.op1_decay == 1799
    assert mod.op2_decay == 8041
    assert mod.op3_decay == 9284
    assert mod.op4_decay == 6614
    assert mod.op5_decay == 653
    assert mod.op1_sustain_level == 1506
    assert mod.op2_sustain_level == 2534
    assert mod.op3_sustain_level == 3234
    assert mod.op4_sustain_level == 23034
    assert mod.op5_sustain_level == 3503
    assert mod.op1_release == 6497
    assert mod.op2_release == 2429
    assert mod.op3_release == 3023
    assert mod.op4_release == 9900
    assert mod.op5_release == 6740
    assert mod.op1_attack_curve == mod.AdsrCurve.exp1
    assert mod.op2_attack_curve == mod.AdsrCurve.exp2
    assert mod.op3_attack_curve == mod.AdsrCurve.exp2
    assert mod.op4_attack_curve == mod.AdsrCurve.exp2
    assert mod.op5_attack_curve == mod.AdsrCurve.neg_exp2
    assert mod.op1_decay_curve == mod.AdsrCurve.linear
    assert mod.op2_decay_curve == mod.AdsrCurve.exp1
    assert mod.op3_decay_curve == mod.AdsrCurve.exp2
    assert mod.op4_decay_curve == mod.AdsrCurve.exp2
    assert mod.op5_decay_curve == mod.AdsrCurve.sin
    assert mod.op1_release_curve == mod.AdsrCurve.neg_exp2
    assert mod.op2_release_curve == mod.AdsrCurve.exp1
    assert mod.op3_release_curve == mod.AdsrCurve.exp2
    assert mod.op4_release_curve == mod.AdsrCurve.neg_exp2
    assert mod.op5_release_curve == mod.AdsrCurve.sin
    assert mod.op1_sustain == mod.Sustain.on
    assert mod.op2_sustain == mod.Sustain.on
    assert mod.op3_sustain == mod.Sustain.repeat
    assert mod.op4_sustain == mod.Sustain.on
    assert mod.op5_sustain == mod.Sustain.repeat
    assert mod.op1_sustain_pedal is False
    assert mod.op2_sustain_pedal is True
    assert mod.op3_sustain_pedal is True
    assert mod.op4_sustain_pedal is False
    assert mod.op5_sustain_pedal is True
    assert mod.op1_envelope_scaling_per_key == -77
    assert mod.op2_envelope_scaling_per_key == 125
    assert mod.op3_envelope_scaling_per_key == -60
    assert mod.op4_envelope_scaling_per_key == -57
    assert mod.op5_envelope_scaling_per_key == 43
    assert mod.op1_volume_scaling_per_key == -100
    assert mod.op2_volume_scaling_per_key == 41
    assert mod.op3_volume_scaling_per_key == 1
    assert mod.op4_volume_scaling_per_key == -32
    assert mod.op5_volume_scaling_per_key == -63
    assert mod.op1_velocity_sensitivity == 36
    assert mod.op2_velocity_sensitivity == -50
    assert mod.op3_velocity_sensitivity == -117
    assert mod.op4_velocity_sensitivity == 3
    assert mod.op5_velocity_sensitivity == 99
    assert mod.op1_waveform == mod.Waveform.hsin
    assert mod.op2_waveform == mod.Waveform.asin
    assert mod.op3_waveform == mod.Waveform.sin
    assert mod.op4_waveform == mod.Waveform.triangle_pow_3
    assert mod.op5_waveform == mod.Waveform.saw_pow_3
    assert mod.op1_noise == 18063
    assert mod.op2_noise == 12653
    assert mod.op3_noise == 20322
    assert mod.op4_noise == 12541
    assert mod.op5_noise == 3300
    assert mod.op1_phase == 4269
    assert mod.op2_phase == 16359
    assert mod.op3_phase == 21738
    assert mod.op4_phase == 13193
    assert mod.op5_phase == 25224
    assert mod.op1_freq_multiply == 22923
    assert mod.op2_freq_multiply == 31970
    assert mod.op3_freq_multiply == 7673
    assert mod.op4_freq_multiply == 26613
    assert mod.op5_freq_multiply == 2735
    assert mod.op1_constant_pitch == -694
    assert mod.op2_constant_pitch == 1841
    assert mod.op3_constant_pitch == -3511
    assert mod.op4_constant_pitch == 1062
    assert mod.op5_constant_pitch == 2358
    assert mod.op1_self_modulation == 11895
    assert mod.op2_self_modulation == 720
    assert mod.op3_self_modulation == 11736
    assert mod.op4_self_modulation == 16926
    assert mod.op5_self_modulation == 23405
    assert mod.op1_feedback == 24510
    assert mod.op2_feedback == 25778
    assert mod.op3_feedback == 9683
    assert mod.op4_feedback == 26614
    assert mod.op5_feedback == 17200
    assert mod.op1_modulation_type == mod.ModulationType.sub
    assert mod.op2_modulation_type == mod.ModulationType.min_abs
    assert mod.op3_modulation_type == mod.ModulationType.max_abs
    assert mod.op4_modulation_type == mod.ModulationType.min
    assert mod.op5_modulation_type == mod.ModulationType.sub
    assert mod.op1_output_mode == 0
    assert mod.op2_output_mode == 15
    assert mod.op3_output_mode == 1
    assert mod.op4_output_mode == 2


# [TODO] record a custom waveform into FMX file and check it here
EXPECTED_CUSTOM_WAVEFORM = [0] * 256
