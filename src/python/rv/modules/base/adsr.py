# -- DO NOT EDIT THIS FILE DIRECTLY --
"""
Base class for Adsr
This file was auto-generated by genrv.
"""

from enum import IntEnum

from rv.controller import Controller


class BaseAdsr:
    name = "Adsr"
    mtype = "ADSR"
    mgroup = "Misc"
    flags = default_flags = 0x59

    class Curve(IntEnum):
        linear = 0
        exp1 = 1
        exp2 = 2
        neg_exp1 = 3
        neg_exp2 = 4
        sin = 5
        rect = 6
        smooth_rect = 7
        bit2 = 8
        bit3 = 9
        bit4 = 10
        bit5 = 11

    class Sustain(IntEnum):
        off = 0
        on = 1
        repeat = 2

    class State(IntEnum):
        stop = 0
        start = 1

    class OnNoteOn(IntEnum):
        do_nothing = 0
        start_on_first_note = 1
        start = 2

    class OnNoteOff(IntEnum):
        do_nothing = 0
        stop_on_last_note = 1
        stop = 2

    class Mode(IntEnum):
        generator = 0
        amp_modulator_mono = 1
        amp_modulator_stereo = 2

    class SmoothTransitions(IntEnum):
        off = 0
        restart_and_volume_change = 1
        restart_smoother_and_volume_change = 2
        volume_change = 3

    volume = Controller((0, 32768), 32768)
    attack = Controller((0, 10000), 100)
    decay = Controller((0, 10000), 100)
    sustain_level = Controller((0, 32768), 16384)
    release = Controller((0, 10000), 100)
    attack_curve = Controller(Curve, Curve.linear)
    decay_curve = Controller(Curve, Curve.linear)
    release_curve = Controller(Curve, Curve.linear)
    sustain = Controller(Sustain, Sustain.on)
    sustain_pedal = Controller(bool, False)
    state = Controller(State, State.stop)
    on_note_on = Controller(OnNoteOn, OnNoteOn.start_on_first_note)
    on_note_off = Controller(OnNoteOff, OnNoteOff.stop_on_last_note)
    mode = Controller(Mode, Mode.generator)
    smooth_transitions = Controller(
        SmoothTransitions, SmoothTransitions.restart_smoother_and_volume_change
    )
